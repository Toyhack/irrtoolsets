dnl Process this file with autoconf to produce a configure script.
AC_INIT(rpsl/rpsl.y)
AC_CONFIG_HEADER(config.h)

AC_CANONICAL_HOST

AC_ARG_ENABLE(debug, [  --enable-debug          turn on debugging],
if eval "test x$enable_debug = xyes"; then
  OPTFLAG="-gstabs+ -DDEBUG -fno-inline"
else
  OPTFLAG="-O3 -gstabs+"
fi
,
OPTFLAG="-O3 -gstabs+"
)

case "${host_os}" in
      solaris* )
              EXTRA_INCLUDE_DIRS="-I/opt/sfw/${ac_cv_host}/include"
              EXTRA_LIBS="-lsocket -lnsl"
      ;;
esac

: ${CFLAGS="$OPTFLAG"}
: ${CXXFLAGS="$OPTFLAG -frtti"}

all_INCDIRS='-I$(top_srcdir)/../Core'
AC_SUBST(all_INCDIRS)
AC_SUBST(EXTRA_INCLUDE_DIRS)
AC_SUBST(EXTRA_LIBS)
AC_DEFINE_UNQUOTED(EXTRA_INCLUDE_DIRS, ${EXTRA_INCLUDE_DIRS})
AC_DEFINE_UNQUOTED(EXTRA_LIBS, ${EXTRA_LIBS})

dnl Checks for programs.
AC_PROG_MAKE_SET
AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_PROG_CXXCPP
AC_PROG_MAKE_SET(MAKE=make)
AC_ARG_PROGRAM
AC_PROG_LN_S
AC_C_CONST
AC_C_BIGENDIAN

: ${LD=$CXX}
AC_SUBST(LD)

: ${LEX="flex"}
AC_SUBST(LEX)
: ${YACC="bison -y"}
AC_SUBST(YACC)

AC_PROG_RANLIB

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(regex.h unistd.h strings.h string.h malloc.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_TYPE_SIZE_T
AC_HEADER_TIME

AC_MSG_CHECKING(for strcasecmp definition)
AC_EGREP_HEADER(strcasecmp, string.h, [AC_DEFINE(HAVE_STRCASECMP_DEFINITION)
AC_MSG_RESULT(yes)], AC_MSG_RESULT(no))

dnl Checks for library functions.
AC_CHECK_FUNCS(timegm strstr memcpy)

############################ prefix ################################

AC_SUBST(prefix)
AC_SUBST(exec_prefix)
AC_SUBST(bindir)
AC_SUBST(mandir)
# Remove any trailing slashes in these variables.
changequote(, )dnl
test "${prefix}" != NONE &&
  prefix=`echo "${prefix}" | sed 's,\([^/]\)/*$,\1,'`
test "${exec_prefix}" != NONE &&
  exec_prefix=`echo "${exec_prefix}" | sed 's,\([^/]\)/*$,\1,'`
changequote([, ])dnl

############################ OUTPUT ################################

AC_OUTPUT(Makefile
	gnu/Makefile
        rpsl/Makefile
)
